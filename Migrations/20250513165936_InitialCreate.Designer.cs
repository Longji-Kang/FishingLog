// <auto-generated />
using System;
using Fishing_API.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fishing_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250513165936_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fishing_API.Models.BaitBrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaitBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Signature Series"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Supercast"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Jumbo"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Supercast"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Boulyn"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Fish"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Magic Baits"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Conoflex"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Trucella"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Self"
                        });
                });

            modelBuilder.Entity("Fishing_API.Models.BaitLogRelationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BaitId")
                        .HasColumnType("integer");

                    b.Property<int>("LogId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BaitId");

                    b.HasIndex("LogId");

                    b.ToTable("BaitLogRelations");
                });

            modelBuilder.Entity("Fishing_API.Models.BaitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BaitTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BaitTypeId");

                    b.HasIndex("BrandId");

                    b.ToTable("BaitModels");
                });

            modelBuilder.Entity("Fishing_API.Models.BaitTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaitTypes");
                });

            modelBuilder.Entity("Fishing_API.Models.DamLocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DamId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DamId");

                    b.ToTable("DamLocations");
                });

            modelBuilder.Entity("Fishing_API.Models.DamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Dam");
                });

            modelBuilder.Entity("Fishing_API.Models.FishSpeciesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FishSpecie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FishSpecies");
                });

            modelBuilder.Entity("Fishing_API.Models.LogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DamLocationId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Day")
                        .HasColumnType("date");

                    b.Property<int>("FishSpecieId")
                        .HasColumnType("integer");

                    b.Property<int>("RigsId")
                        .HasColumnType("integer");

                    b.Property<int>("Temperature")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("WeatherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DamLocationId");

                    b.HasIndex("FishSpecieId");

                    b.HasIndex("RigsId");

                    b.HasIndex("WeatherId");

                    b.ToTable("LogModels");
                });

            modelBuilder.Entity("Fishing_API.Models.ProvinceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Fishing_API.Models.RigsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RigName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rigs");
                });

            modelBuilder.Entity("Fishing_API.Models.WeatherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Weather")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("Fishing_API.Models.BaitLogRelationModel", b =>
                {
                    b.HasOne("Fishing_API.Models.BaitModel", "Bait")
                        .WithMany()
                        .HasForeignKey("BaitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_API.Models.LogModel", "Log")
                        .WithMany()
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bait");

                    b.Navigation("Log");
                });

            modelBuilder.Entity("Fishing_API.Models.BaitModel", b =>
                {
                    b.HasOne("Fishing_API.Models.BaitTypeModel", "BaitType")
                        .WithMany()
                        .HasForeignKey("BaitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_API.Models.BaitBrandModel", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaitType");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Fishing_API.Models.DamLocationModel", b =>
                {
                    b.HasOne("Fishing_API.Models.DamModel", "Dam")
                        .WithMany()
                        .HasForeignKey("DamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dam");
                });

            modelBuilder.Entity("Fishing_API.Models.DamModel", b =>
                {
                    b.HasOne("Fishing_API.Models.ProvinceModel", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Fishing_API.Models.LogModel", b =>
                {
                    b.HasOne("Fishing_API.Models.DamLocationModel", "DamLocation")
                        .WithMany()
                        .HasForeignKey("DamLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_API.Models.FishSpeciesModel", "FishSpecie")
                        .WithMany()
                        .HasForeignKey("FishSpecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_API.Models.RigsModel", "Rigs")
                        .WithMany()
                        .HasForeignKey("RigsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_API.Models.WeatherModel", "Weather")
                        .WithMany()
                        .HasForeignKey("WeatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DamLocation");

                    b.Navigation("FishSpecie");

                    b.Navigation("Rigs");

                    b.Navigation("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
